/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@arrow-down-name: 'arrow-down';
@arrow-down-x: 19px;
@arrow-down-y: 24px;
@arrow-down-offset-x: -19px;
@arrow-down-offset-y: -24px;
@arrow-down-width: 16px;
@arrow-down-height: 8px;
@arrow-down-total-width: 73px;
@arrow-down-total-height: 41px;
@arrow-down-image: '../img/sprite/sprite.png';
@arrow-down: 19px 24px -19px -24px 16px 8px 73px 41px '../img/sprite/sprite.png' 'arrow-down';
@arrow-left-nav-name: 'arrow-left-nav';
@arrow-left-nav-x: 48px;
@arrow-left-nav-y: 20px;
@arrow-left-nav-offset-x: -48px;
@arrow-left-nav-offset-y: -20px;
@arrow-left-nav-width: 10px;
@arrow-left-nav-height: 19px;
@arrow-left-nav-total-width: 73px;
@arrow-left-nav-total-height: 41px;
@arrow-left-nav-image: '../img/sprite/sprite.png';
@arrow-left-nav: 48px 20px -48px -20px 10px 19px 73px 41px '../img/sprite/sprite.png' 'arrow-left-nav';
@arrow-right-nav-name: 'arrow-right-nav';
@arrow-right-nav-x: 63px;
@arrow-right-nav-y: 0px;
@arrow-right-nav-offset-x: -63px;
@arrow-right-nav-offset-y: 0px;
@arrow-right-nav-width: 10px;
@arrow-right-nav-height: 19px;
@arrow-right-nav-total-width: 73px;
@arrow-right-nav-total-height: 41px;
@arrow-right-nav-image: '../img/sprite/sprite.png';
@arrow-right-nav: 63px 0px -63px 0px 10px 19px 73px 41px '../img/sprite/sprite.png' 'arrow-right-nav';
@arrow-right-name: 'arrow-right';
@arrow-right-x: 63px;
@arrow-right-y: 21px;
@arrow-right-offset-x: -63px;
@arrow-right-offset-y: -21px;
@arrow-right-width: 6px;
@arrow-right-height: 12px;
@arrow-right-total-width: 73px;
@arrow-right-total-height: 41px;
@arrow-right-image: '../img/sprite/sprite.png';
@arrow-right: 63px 21px -63px -21px 6px 12px 73px 41px '../img/sprite/sprite.png' 'arrow-right';
@facebook-name: 'facebook';
@facebook-x: 0px;
@facebook-y: 0px;
@facebook-offset-x: 0px;
@facebook-offset-y: 0px;
@facebook-width: 22px;
@facebook-height: 22px;
@facebook-total-width: 73px;
@facebook-total-height: 41px;
@facebook-image: '../img/sprite/sprite.png';
@facebook: 0px 0px 0px 0px 22px 22px 73px 41px '../img/sprite/sprite.png' 'facebook';
@instagram-name: 'instagram';
@instagram-x: 24px;
@instagram-y: 0px;
@instagram-offset-x: -24px;
@instagram-offset-y: 0px;
@instagram-width: 22px;
@instagram-height: 22px;
@instagram-total-width: 73px;
@instagram-total-height: 41px;
@instagram-image: '../img/sprite/sprite.png';
@instagram: 24px 0px -24px 0px 22px 22px 73px 41px '../img/sprite/sprite.png' 'instagram';
@location-name: 'location';
@location-x: 48px;
@location-y: 0px;
@location-offset-x: -48px;
@location-offset-y: 0px;
@location-width: 13px;
@location-height: 18px;
@location-total-width: 73px;
@location-total-height: 41px;
@location-image: '../img/sprite/sprite.png';
@location: 48px 0px -48px 0px 13px 18px 73px 41px '../img/sprite/sprite.png' 'location';
@tel-name: 'tel';
@tel-x: 0px;
@tel-y: 24px;
@tel-offset-x: 0px;
@tel-offset-y: -24px;
@tel-width: 17px;
@tel-height: 17px;
@tel-total-width: 73px;
@tel-total-height: 41px;
@tel-image: '../img/sprite/sprite.png';
@tel: 0px 24px 0px -24px 17px 17px 73px 41px '../img/sprite/sprite.png' 'tel';
@spritesheet-width: 73px;
@spritesheet-height: 41px;
@spritesheet-image: '../img/sprite/sprite.png';
@spritesheet-sprites: @arrow-down @arrow-left-nav @arrow-right-nav @arrow-right @facebook @instagram @location @tel;
@spritesheet: 73px 41px '../img/sprite/sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
